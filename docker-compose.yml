services:
  authentication:
    build:
      context: ./authentication
      dockerfile: deployment/Dockerfile
    container_name: Authentication-CrediYa
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8080:8080"
    restart: always

  proposal:
    build:
      context: ./proposal
      dockerfile: deployment/Dockerfile
    container_name: Proposal-CrediYa
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8081:8081"
    restart: always
  
  reports:
    build:
      context: ./reports
      dockerfile: deployment/Dockerfile
    container_name: Reports-CrediYa
    env_file:
      - .env
    ports:
      - "8082:8082"
    restart: always
    volumes:
    - ${USERPROFILE}/.aws:/root/.aws:ro

  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: